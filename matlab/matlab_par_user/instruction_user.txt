Instruction updated 1/14/20
Created by Will Paik (gip5038@psu.edu)

NOTE: While job is running, MATLAB must be opened for whole time. So, please make sure to leave terminal or OpenonDemand(OoD) session alive.

STEP 1: Creating Profile
	Need to create a cluster profile through matlab GUI
	(This can be done on aci-i)

	Creating Torque profile from "Manage Cluster Profiles"
	1) Press Add ("+" mark) -> Custom -> Torque

	(Note: Name of the profile can be changed from the Cluster Profile box on the left)
	(Note: "parcluster('ProfileName')" returns profile setup -> check SSH and SCP section)

STEP 2: Run submission script
	1) Once done, launch matlab on text mode and run job script (without .m):
	($: Linux terminal, >: Matlab command window)
	   $ module load matlab
	   $ export LD_LIBRARY_PATH=/usr/lib64/:$LD_LIBRARY_PATH
	   $ matlab -nodisplay -nosplash -r "<Script_Name> ; exit"
	   Or,
	   $ module load matlab
	   $ matlab -nodisplay -nosplash
	   > run <Script_Name>
	2) Check if job is on queue ($ qstat -u PSUID)
	NOTE: In case of error message regarding ZLIB and CXXABI not found, use command:
	   $ export LD_LIBRARY_PATH=/usr/lib64/:$LD_LIBRARY_PATH
	then, use qstat command again.

Alternatively, user can use GUI
	1) Open MATLAB GUI from OoD, run Job script from MATLAB

STEP 3: Check the result or output
	Method 1 (Save output to text file):
	"diary(JobName, 'OutputFile.txt')" must be on the submission script, all command line output will be stored in OutputFile.txt.
	(Note: load(JobName) should not be used)
	
	Method 2 (Check output via GUI):
	Use ACI-I to open Matlab GUI. Type following line on Matlab command window:
	> LD_LIBRARY_PATH /usr/lib64/:LD_LIBRARY_PATH
	Then, right click a job from Job Monitor and press "Show Diary"


########## Sample submission command ##########
$ module load matlab
$ matlab -nodisplay -nosplash -r "cluster_test;exit"


Note: 
Requested resource can be easily changed but last number on the following line
must be smaller than total number of processors:

jj = batch(Cluster, 'testpar','pool',19);

(i.e. 19 if 20 processors are requested)



